<!DOCTYPE html>
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>1대 1 채팅</title>
        <link rel = "stylesheet" href ="/css/home/index.css">
        <link rel = "stylesheet" href="/css/chat/chat.css">
        <script src="/js/chat/oneChatStart.js"></script>
       
        <script src="/socket.io/socket.io.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/mark.min.js"></script>
    </head>
    
    <body>
        <div class = "container">
            <header>
                <nav>
                    <div class = "icon" onclick="location.href = '/'">LiveChat</div>
                    <div class = "gnb">
                        <a href="/chat">오픈 채팅</a>
                        <a href="/board/page/1">게시판</a>
                        <a href="/chat/oneChat">1대1 채팅</a>
                        <a href="/chat/random">랜덤채팅</a>
                        <a href="/login" class="login_menu">로그아웃</a>
                    </div>
                </nav>
            </header>
        </div>
        <div class = "search-box">
            <input type="text" id="search"/>
            <!--
            <button data-search="next" id="next" class="next-btn">∨</button>
            <button data-search="prev" id="prev" class="prev-btn">∧</button>
            <button data-search="clear" id="clear" class="clear-btn">Ⅹ</button>
            <span class="kwt-count" id="count">-</span>-->
            <button onclick = "" class="btn-search">검색하기</button>
        </div>

        <div class="content">
            
            <div class="chat-box" id="chat">
                <%
                    var i = 0;
                    for(i;i<rows.length;i++){
                        var data = rows[i];
                        var id = data.userId;
                        var flag = data.flag;
                        if(id===userId){
                            if(flag===0){%>
                                <div class="me"><%=data.userId%> : <%=data.chat%><span class="flag"></div>
                            <%}else{%>
                                <div class="me"><%=data.userId%> : <%=data.chat%><span class="flag"><%=data.flag%>&nbsp;</span></div>
                            <%}        
                        }else{
                            %>
                            <div class="other"><%=data.userId%> : <%=data.chat%></div>
                        <%}
                    }%>
           
            </div>
            <div>
                <span id ="id"><%=userId%></span>
                <input class="text-submit" type="text" id="user"/>
                <spam class="imgPlus" onclick = "imgUpload()">＋</spam>
                <button onclick="myOnClick()" class="btn-submit">전송</button>
                <!-- 사진 업로드 -->
                <form id="uploadForm" style="display:none" ><!--enctype="multipart/form-data">-->
                    <input type="file" name="testImg" id="imgTest"/>
                    <button type="submit" id="uploadBtn">Save</button>
                </form>
            </div>
        </div>
        <input type="hidden" id = "seq" value="<%=seq%>"/>
    </body>
    <script>
        const pageUrl = window.location.href;
        
        const url = new URL(pageUrl);
        const urlParams = url.searchParams;

        let roomName = urlParams.get('name'); 
        const otherId = urlParams.get('id');

        const userId = document.getElementById("id").innerText;
        console.log(userId);

        let seq = document.getElementById("seq").value;  //채팅방 시퀀스
        console.log(seq);
        var socket = io.connect('http://localhost:5000');
        
        socket.emit('joinRoom',{roomName:roomName,userId:userId});

        socket.on('oneMsg', function (data) {//텍스트 받기
            console.log(data.comment)
            var chat = document.getElementById('chat');
            var className=data.class;
            
            var message = document.createElement('div');
            var node = document.createTextNode(data.comment)
            //document.getElementById("chat").append(data.comment);
            

            message.classList.add(className);
            message.appendChild(node);
            chat.appendChild(message);
        });

        socket.on('oneImgMsg', function (data) {//이미지 받기
                      
            var className=data.class;
            alert(data.url)
            var chat = document.getElementById('chat')
            var msg = document.createElement('div')
            let x = document.createElement("IMG");
            x.setAttribute("src",data.url)
            msg.classList.add(className);
            msg.appendChild(x);
            chat.appendChild(msg);
        });

        function myOnClick() {
            var message = document.getElementById("user").value ;
            const req = {
                userId : userId,
                otherId : otherId,
                chat : message,
                seq : seq,
            }

            fetch('/chat/oneInsert',{
                method:"POST",
                headers : {
                    "Content-Type" : "application/json",
                },
                body:JSON.stringify(req)
            })
            .then((res)=>res.json())
            .then((res)=>{
                if(res.success){
                    if(!roomName){  //url에 방이름이 없는 새로 시작하는 방일 경우
                        roomName=res.seq+"one";
                        socket.emit('joinRoom',{roomName:roomName,userId:userId});
                        seq = res.seq;
                        console.log(roomName);
                        console.log(seq);
                    }
                    oneMsg(message);
                }else{
                    alert("채팅 발송 중 오류 발생");
                }
            })
            
            
        }

        function oneMsg(message){
            console.log(roomName);
            socket.emit('one',{roomName:roomName,userId:userId,comment:message,seq:seq})
            //socket.emit(roomName, {comment:msg});
            document.getElementById('user').value = '';
            var chat = document.getElementById('chat')
            var msg = document.createElement('div')
            var node = document.createTextNode(userId+" : "+message)
            msg.classList.add('me');
            msg.appendChild(node);
            chat.appendChild(msg);
        }

        function imgUpload(){//이미지 업로드 창 나오게
            const flag = document.getElementById("uploadForm").style.display;

            if(flag === 'none'){
                document.getElementById("uploadForm").style.display = "block";
            }else{
                document.getElementById("uploadForm").style.display = "none";
            }
        }

        function imgDB(url) {
            url=url.split('?')[0];
            alert("imgDB : "+url)
            const req = {
                userId : userId,
                otherId : otherId,
                chat : url,
                seq : seq,
            }

            fetch('/chat/oneInsert',{
                method:"POST",
                headers : {
                    "Content-Type" : "application/json",
                },
                body:JSON.stringify(req)
            })
            .then((res)=>res.json())
            .then((res)=>{
                if(res.success){
                    if(!roomName){  //url에 방이름이 없는 새로 시작하는 방일 경우
                        roomName=res.seq+"one";
                        socket.emit('joinRoom',{roomName:roomName,userId:userId});
                        seq = res.seq;
                        console.log(roomName);
                        console.log(seq);
                    }
                    imgOne(url);
                }else{
                    alert("채팅 발송 중 오류 발생");
                }
            })
            
            
        }

        function imgOne(url){
            console.log(url);
            
            socket.emit('oneImg',{roomName:roomName,userId:userId,url:url,seq:seq});
            document.getElementById("uploadForm").style.display = "none";

            var chat = document.getElementById('chat')
            var msg = document.createElement('div')
            let x = document.createElement("IMG");
            x.setAttribute("src",url)
            msg.classList.add('me');
            msg.appendChild(x);
            chat.appendChild(msg);

        }

        /*function imgOnClick(){
            const imageForm = document.querySelector("#uploadForm");
            const imageFile = document.querySelector('#imgTest');

            const file = imageFile.files[0];
            
            console.log(file)
            const req = {
                file:file
            }
            fetch('/chat/imgUpload',{
                method:"POST",
                headers : {
                    "Content-Type" : "application/json",
                },
                body:JSON.stringify(file)
            })
        }*/
       
    </script>
    <script src="/js/chat/imgUpload.js"></script>
</html>